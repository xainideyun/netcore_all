<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="logs/internal-nlog.txt">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <!-- the targets to write to -->
  <targets>

    <target name="Console" xsi:type="Console" layout="${level} ${message}"/>
    <!-- write logs to file  -->
    <!--<target xsi:type="File" name="allfile" fileName="c:\temp\nlog-all-${shortdate}.log" layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />-->

    <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
    <target xsi:type="file" name="ownFile-web" fileName="${basedir}/logs/${date:format=yyyyMM}/${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />
    <!-- ${exception:format=tostring}-->
    <!--<target xsi:type="Database" name="database" dbProvider="System.Data.SqlClient">-->
    <target xsi:type="Database" name="database" dbProvider="MySql.Data.MySqlClient.MySqlConnection, MySql.Data">
      <connectionString>${var:connectionString}</connectionString>
      <!--
        CREATE TABLE [dbo].[Log] (
          [Id] int PRIMARY KEY IDENTITY(1,1) NOT NULL,
          [CreateTime] datetime2(7)  NULL,
          [Level] nvarchar(50) COLLATE Chinese_PRC_CI_AS  NULL,
          [Message] varchar(250) COLLATE Chinese_PRC_CI_AS  NULL,
          [Logger] varchar(512) COLLATE Chinese_PRC_CI_AS  NULL,
          [Callsite] varchar(512) COLLATE Chinese_PRC_CI_AS  NULL,
          [Exception] varchar(512) COLLATE Chinese_PRC_CI_AS  NULL
        )
      -->
      <commandText>
        insert into NLogInfo (
        CreateTime, Level, Message,
        Logger, CallSite, Exception
        ) values (
        @Logged, @Level, @Message,
        @Logger, @Callsite, @Exception
        );
      </commandText>
      <parameter name="@logged" layout="${date}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@message" layout="${message}" />
      <parameter name="@logger" layout="${logger}" />
      <parameter name="@callSite" layout="${callsite:filename=true}" />
      <parameter name="@exception" layout="${exception:tostring}" />
    </target>

  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <!--<logger name="*" minlevel="Trace" writeTo="allfile" />-->

    <!--Skip non-critical Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" maxlevel="Info" final="true" writeTo="Console" />
    <!-- BlackHole without writeTo -->
    <logger name="*" minlevel="Debug" writeTo="ownFile-web" />
    <logger name="*" minlevel="Info" writeTo="database" />
  </rules>
</nlog>